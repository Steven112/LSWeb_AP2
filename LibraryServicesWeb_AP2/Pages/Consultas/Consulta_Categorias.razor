@page "/ConsultaCategorias"

@using Models
@using BLL
@inject IToastService toast
@inject AuthenticationStateProvider AuthenticationStateProvider


@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
{<a href="ContConsulta" class="btn btn-warning justify-content-lg-start">Menu de Consultas</a>
    <div class="card bg-dark text-white">
        <div class="card-header">
            <h3><strong>Consulta Categorias</strong></h3>
        </div>
        <div class="card-body">

            <div class="card-header">
                <div class="row">
                    <div class="input-group col-12">
                        <div class="form-group col-3">
                            <label><strong>Filtro: </strong></label>
                            <select class="form-control" @bind="Filtro">
                                <option value=0>Todos</option>
                                <option value=1>Id</option>
                                <option value=3>Descripcion</option>


                            </select>
                        </div>
                        <div class="form-group col-4">
                            <label><strong>Criterio: </strong></label>
                            <div class="input-group">
                                <input type="text" class="form-control" @bind="Criterio" placeholder="Criterio" />
                                <button type="button" class="btn btn-primary input-group-append" @onclick="@(c => Consultar(0))">Consultar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Descripcion</th>

                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody class=text-white>
                @foreach (var item in Lista)
                {
                    <tr>
                        <td>@item.CategoriaId</td>
                        <td>@item.Descripcion</td>
                        <td><a class="btn btn-dark" href="@($"Categorias/{item.CategoriaId}")">Editar</a></td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
    <div class="bg-dark text-white">
        <div class="row">
            <div class="form-group col-2 col-md-2 ml-auto">
                <label><strong>Imprimir </strong></label>
                <button type="button" class="btn btn-primary btn-block"><span class="oi oi-print"></span> Consulta</button>
            </div>
        </div>
    </div>




    <div class="card-footer">
        <div class="form-group text-center" display: inline-block>
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    <li class="page-item">
                        <button class="page-link btn btn-success"
                                @onclick="@(e => NavegateTo("Previous"))" tabindex="-1">
                            Previous
                        </button>
                    </li>

                    @for (int i = 0; i < Paginas; i++)
                    {
                        var pageNumber = i;
                        <li class="page-item">
                            <button class="@(CurrentPage == pageNumber ? "page-link btn btn-dark" : "page-link btn btn-danger")"
                                    @onclick="@(u => Consultar(pageNumber))">
                                @(i + 1)
                            </button>
                        </li>
                    }

                    <li class="page-item">
                        <button type="button" class="page-link btn btn-danger" @onclick="@(e => NavegateTo("Next"))" tabindex="-1">Next</button>
                    </li>
                </ul>
            </nav>
        </div>
    </div>

}
else
{
    <h1>No esta registrado</h1>
    <a href="Usuarios" class="btn btn-primary">Ir al Registro</a>
}

@code {
    public List<Categoria> Lista { get; set; } = new List<Categoria>();
    public List<Categoria> Items { get; set; } = new List<Categoria>();

    public string Criterio { get; set; } = string.Empty;
    public int Tamañopagina { get; set; }
    public int Paginas{ get; set; }
    public int CurrentPage { get; set; }
    public int Filtro { get; set; }



    protected override void OnInitialized()
    {
        Tamañopagina = 4;

        base.OnInitialized();
    }

    public void Consultar(int nulo)
    {
        if (Criterio != string.Empty)
        {
            switch (Filtro)
            {
                case 0:
                    Items = CategoriaBLL.GetList(p => true);
                    Paginas = (int)Math.Ceiling(Items.Count() / (decimal)Tamañopagina);
                    UpdateList(nulo);
                    break;
                case 1:
                    int id = Convert.ToInt32(Criterio);
                    Items = CategoriaBLL.GetList(a => a.CategoriaId == id);
                    Paginas = (int)Math.Ceiling(Items.Count() / (decimal)Tamañopagina);
                    UpdateList(nulo);
                    break;
                case 2:
                    Items = CategoriaBLL.GetList(a => a.Descripcion.Contains(Criterio));
                    Paginas = (int)Math.Ceiling(Items.Count() / (decimal)Tamañopagina);
                    UpdateList(nulo);
                    break;


            }
        }
        else
        {
            Items = CategoriaBLL.GetList(a => true);
            Paginas = (int)Math.Ceiling(Items.Count() / (decimal)Tamañopagina);
            UpdateList(nulo);
        }
    }

    private void UpdateList(int pageNumber)
    {
        Lista = Items.Skip(pageNumber * Tamañopagina).Take(Tamañopagina).ToList();
        CurrentPage = pageNumber;
    }

    private void NavegateTo(string direction)
    {
        if (direction == "Previous" && CurrentPage != 0)
            CurrentPage -= 1;
        if (direction == "Next" && CurrentPage != Paginas)
            CurrentPage += 1;

        UpdateList(CurrentPage);
    }






}
