@page "/Categorias"
@page "/Categorias/{CategoriaId:int}"

@using Models
@using LibraryServicesWeb_AP2.BLL
@inject IToastService toast


<EditForm Model="categoria" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card bg-dark text-white">
        <div class="card-header">
            <h3> Registro Categorias</h3>
        </div>
        <div class="card-body">
            <form>
                @*CategoriaId*@
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>CategoriaId</label>
                            <div class=" input-group">
                                <InputNumber @bind-Value="categoria.CategoriaId" class="form-control col-4" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*Descripcion*@
                <div class="form-group">
                    <label>Descripcion</label>
                    <InputText @bind-Value="categoria.Descripcion" class="form-control " />
                    <ValidationMessage For="@(()=> categoria.Descripcion)" />

                </div>


            </form>
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int CategoriaId { get; set; }
    Categoria categoria = new Categoria();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
    }
    public void Nuevo()
    {
        categoria = new Categoria();
    }


    public void Buscar()
    {


        if (categoria.CategoriaId > 0)
        {
            var encontrado = CategoriaBLL.Buscar(categoria.CategoriaId);

            if (encontrado != null)
            {
                this.categoria = encontrado;
            }

        }
        else
        {
            this.categoria = new Categoria();
        }



    }

    public void Guardar()
    {
        bool guardo;

        guardo = CategoriaBLL.Guardar(categoria);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
            toast.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = CategoriaBLL.Eliminar(categoria.CategoriaId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }

}
