@page "/REditorial"
@page "/REditorial/{EditorialId:int}"

@using Models
@using LibraryServicesWeb_AP2.BLL
@inject IToastService toast

@inject AuthenticationStateProvider AuthenticationStateProvider

<style>
    body {
        background-color: dimgrey;
    }
</style>

<EditForm Model="editorial" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    @if (AuthenticationStateProvider.GetAuthenticationStateAsync()
.Result.User.Identity.IsAuthenticated)
    {
        <a href="ContRegistros" class="btn btn-warning justify-content-lg-start">Menu Principal</a>
        <div class="card bg-dark text-white">
            <div class="card-header">
                <h3> Registro Editorial</h3>
            </div>
            <div class="card-body">
                <form>
                    @*EditorialId*@
                    <div class="form-row align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <label>EditorialId</label>
                                <div class=" input-group">
                                    <InputNumber @bind-Value="editorial.EditorialId" class="form-control col-4" />
                                    <ValidationMessage For="@(()=> editorial.EditorialId)" />
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*Nombre Editorial*@
                    <div class="form-group">
                        <label>Nombre</label>
                        <InputText @bind-Value="editorial.Nombre" class="form-control " />
                        <ValidationMessage For="@(()=> editorial.Nombre)" />

                    </div>
                    @*Direccion*@
                    <div class="form-group">
                        <label>Direccion</label>
                        <InputText @bind-Value="editorial.Dirrecion" class="form-control " />
                        <ValidationMessage For="@(()=> editorial.Dirrecion)" />

                    </div>


                </form>
            </div>
            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><span class="oi oi-plus"></span> Nuevo</button>
                    <button type="submit" class="btn btn-lg btn-success"><span class="oi oi-circle-check"></span> Guardar</button>

                    @if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
                    {
                        <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><span class="oi oi-delete"></span> Eliminar</button>

                    }

                </div>
            </div>
        </div>

    }
    else
    {
        <h1>No esta registrado</h1>
        <a href="Usuarios" class="btn btn-primary">Ir al Registro</a>
    }


</EditForm>

@code {
    [Parameter]
    public int EditorialId { get; set; }

    Editorial editorial = new Editorial();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
        if (EditorialId != 0)
        {
           
            editorial.EditorialId = EditorialId;
            Buscar();
        }
    }
    public void Nuevo()
    {
        editorial = new Editorial();
    }


    public void Buscar()
    {


        if (editorial.EditorialId > 0)
        {
            var encontrado = EditorialBLL.Buscar(editorial.EditorialId);

            if (encontrado != null)
            {
                this.editorial = encontrado;
            }

        }
        else
        {
            this.editorial = new Editorial();
        }



    }

    public void Guardar()
    {
        bool guardo;

        guardo = EditorialBLL.Guardar(editorial);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
            toast.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = EditorialBLL.Eliminar(editorial.EditorialId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }

}
